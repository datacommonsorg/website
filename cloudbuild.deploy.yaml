steps:

- id: package_js
  name: 'node'
  entrypoint: /bin/bash
  args:
  - -c
  - |
    set -x
    ./run_test.sh -lbc

- id: flask_test
  name: python:3.7-slim
  entrypoint: /bin/sh
  args:
  - -c
  - |
    set -x
    ./run_test.sh -p

- id: deploy
  name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: /bin/bash
  args:
  - -c
  - |
    set -x
    cd server
    gcloud config set project datcom-browser-staging
    gcloud app deploy app_staging.yaml -q --version=$SHORT_SHA
    # Keep at most 5 recent versions
    if [[ "$(gcloud app versions list | wc -l)" -gt 6 ]]; then
      echo "Remove the oldest version..."
      gcloud app versions delete -q \
      `gcloud app versions list --sort-by=~LAST_DEPLOYED | sed 's/  */:/g' | cut -f 2 -d : | tail -1 | tr "\n" " "`
    fi


- id: update version
  name: 'gcr.io/cloud-builders/git'
  entrypoint: /bin/bash
  args:
  - -c
  - |
    set -x
    gcloud source repos clone deployment --project=datcom-ci
    cd deployment
    # Configure Git to create commits with Cloud Build's service account
    git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)')
    git checkout master
    echo $SHORT_SHA > website/staging/commit_hash.txt
    git add website/staging/commit_hash.txt
    git commit -m "Deployed website to staging at commit https://github.com/datacommonsorg/website/commit/$SHORT_SHA"
    git push origin master