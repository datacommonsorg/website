# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:
  - id: package_js
    name: "node"
    entrypoint: /bin/bash
    args:
      - -c
      - |
        set -x
        ./run_test.sh -lbc

  - id: flask_test
    name: python:3.7-slim
    entrypoint: /bin/sh
    args:
      - -c
      - |
        set -x
        ./run_test.sh -p

  - id: deploy
    name: "gcr.io/cloud-builders/gcloud"
    entrypoint: /bin/bash
    args:
      - -c
      - |
        set -x

        # Set project
        gcloud config set project datcom-browser-staging

        # Deploy dispatch.yaml
        gclodu app deploy dispatch.yaml

        # Deploy the go service
        gcloud app deploy go/go.yaml

        # Deploy flask app service
        gcloud config set app/cloud_build_timeout 1200
        gcloud app deploy server/app_staging.yaml -q --version=$SHORT_SHA

        # Keep at most 5 recent versions
        if [[ "$(gcloud app versions list | wc -l)" -gt 6 ]]; then
          echo "Remove the oldest version..."
          gcloud app versions delete -q \
          `gcloud app versions list --sort-by=~LAST_DEPLOYED | sed 's/  */:/g' | cut -f 2 -d : | tail -1 | tr "\n" " "`
        fi

  - id: update version
    name: "gcr.io/cloud-builders/git"
    entrypoint: /bin/bash
    args:
      - -c
      - |
        set -x
        gcloud source repos clone deployment --project=datcom-ci
        cd deployment
        # Configure Git to create commits with Cloud Build's service account
        git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)')
        git checkout master
        echo $SHORT_SHA > website/staging/commit_hash.txt
        git add website/staging/commit_hash.txt
        git commit -m "Deployed website to staging at commit https://github.com/datacommonsorg/website/commit/$SHORT_SHA"
        git push origin master

timeout: 3600s
