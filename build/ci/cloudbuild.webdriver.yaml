# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

availableSecrets:
  secretManager:
  - versionName: projects/879489846695/secrets/PERCY_TOKEN/versions/latest
    env: 'percy_token'

steps:
  # Build the static files
  - id: package_js
    name: gcr.io/datcom-ci/node:2024-11-19
    entrypoint: /bin/bash
    waitFor: ["-"]
    args:
      - -c
      - |
        # The node docker image comes with a pre-installed node_modules directory.
        # Copy node_modules onto the static folder and update the node_module packages instead of downloading from scratch.
        # This step is done for speed, downloading the delta files is faster than downloading the entire dependencies.
        rm -rf static/node_modules
        cp -r /resources/node_modules -d static/

        # ./run_test.sh -b will build client packages.
        # These js files generated will be necessery for the flask_webdriver_test task.
        ./run_test.sh -b


  - id: setup_python
    name: python:3.11.4
    entrypoint: /bin/bash
    waitFor: ["-"]
    args:
      - -c
      - |
        ./run_test.sh --setup_python

  - id: setup_website
    name: python:3.11.4
    entrypoint: /bin/bash
    waitFor: ["-"]
    args:
      - -c
      - |
        ./run_test.sh --setup_website

  - id: setup_nl
    name: python:3.11.4
    entrypoint: /bin/bash
    waitFor: ["-"]
    args:
      - -c
      - |
        ./run_test.sh --setup_nl

  # Run the webdriver tests
  - id: flask_webdriver_test
    name: gcr.io/datcom-ci/webdriver-chrome:2025-01-15
    entrypoint: /bin/bash
    waitFor: ["package_js", "setup_python"]
    secretEnv: ['percy_token']
    env:
      - 'PERCY_TARGET_BRANCH=${_BASE_BRANCH}'
      - 'PERCY_PULL_REQUEST=${_PR_NUMBER}'
      - 'PERCY_BRANCH=${_HEAD_BRANCH}'
    args:
      - -c
      - |
        apt-get update && apt-get install -y nodejs npm
        export PERCY_TOKEN=${percy_token}
        ./run_test.sh -w

  # # Run the Custom DC webdriver tests. 
  # - id: flask_cdc_webdriver_test
  #   name: gcr.io/datcom-ci/full-env:2025-05-20
  #   entrypoint: /bin/sh
  #   waitFor: ["package_js", "setup_python", "setup_website", "setup_nl"]
  #   secretEnv: ['percy_token']
  #   env:
  #     - 'PERCY_TARGET_BRANCH=${_BASE_BRANCH}'
  #     - 'PERCY_PULL_REQUEST=${_PR_NUMBER}'
  #     - 'PERCY_BRANCH=${_HEAD_BRANCH}'
  #   args:
  #     - -c
  #     - |
  #       apt-get update && apt-get install -y nodejs npm
  #       export PERCY_TOKEN=${percy_token}
  #       export STARTUP_WAIT_SEC=60
  #       ./run_test.sh --cdc

timeout: 1800s # 30 minutes

options:
  machineType: "E2_HIGHCPU_32"