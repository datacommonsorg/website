# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:
  # Push website image to container registry
  - id: push-image
    name: gcr.io/cloud-builders/docker
    entrypoint: "bash"
    args:
      - -c
      - |
        set -e
        docker build -f build/Dockerfile \
          -t gcr.io/datcom-ci/datacommons-website:$SHORT_SHA \
          -t gcr.io/datcom-ci/datacommons-website:latest \
          .
        docker push gcr.io/datcom-ci/datacommons-website:$SHORT_SHA
        docker push gcr.io/datcom-ci/datacommons-website:latest

  - id: update version
    name: "gcr.io/cloud-builders/git"
    entrypoint: /bin/bash
    args:
      - -c
      - |
        set -e

        gcloud source repos clone deployment /tmp/deployment --project=datcom-ci
        cd /tmp/deployment
        # Configure Git to create commits with Cloud Build's service account
        git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)')
        git checkout master
        echo $SHORT_SHA > website/staging/commit_hash.txt
        git add website/staging/commit_hash.txt
        git commit -m "Deployed website to staging at commit https://github.com/datacommonsorg/website/commit/$SHORT_SHA"
        git push origin master

  # Deploy website with the latest mixer and base cache
  - id: autopush
    name: "gcr.io/datcom-ci/deploy-tool"
    entrypoint: /bin/bash
    args:
      - -c
      - |
        set -e
        ./scripts/autopush.sh

timeout: 3600s
