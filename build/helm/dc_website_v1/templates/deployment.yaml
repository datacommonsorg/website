# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Website App Kubernetes Deployment config. (https://kubernetes.io/docs/concepts/workloads/controllers/deployment/)
# This is to be extended by the dev/autopush/staging/prod overlay.
# The deployment contains Flask web server container , gRPC mixer container and ESP container that transcodes grpc to JSON.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dc-website.fullname" . }}
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "dc-website.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      # maximum number of Pods that can be created over the desired number of Pods
      maxSurge: 4
      # Maximum number of pods that can be unavailable during the update process
      # Environment have different number of pods, this is roughly 8% in prod.
      maxUnavailable: 5
  selector:
    matchLabels:
      {{- include "dc-website.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "dc-website.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      volumes:
        - name: schema-mapping
          configMap:
            name: {{ include "dc-website.fullname" . }}-schema-mapping
        - name: ai-config
          configMap:
            name: {{ include "dc-website.fullname" . }}-ai-config
        - name: memdb-config
          configMap:
            name: {{ include "dc-website.fullname" . }}-memdb-config
      containers:
        - name: website
          image:  "{{ .Values.website.image.repository }}:{{ .Values.website.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.website.image.pullPolicy }}
          args: []
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /healthz
              port: 8080
            failureThreshold: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            failureThreshold: 1
            periodSeconds: 10
          resources:
            limits:
              memory: "3G"
            requests:
              memory: "3G"
          volumeMounts:
            - name: ai-config
              mountPath: /datacommons/ai
          env:
            - name: FLASK_ENV
              valueFrom:
                configMapKeyRef:
                  name: {{ include "dc-website.fullname" . }}-website-config
                  key: flaskEnv
            # This is the GCP project that holds the secrets: api key, etc...
            - name: SECRET_PROJECT
              valueFrom:
                configMapKeyRef:
                  name: {{ include "dc-website.fullname" . }}-website-config
                  key: secretProject
            - name: WEBSITE_HASH
              valueFrom:
                configMapKeyRef:
                  name: {{ include "dc-website.fullname" . }}-githash
                  key: website_hash.txt
            - name: BIG_QUERY
              valueFrom:
                configMapKeyRef:
                  name: {{ include "dc-website.fullname" . }}-store-config
                  key: bigquery.version
            # A dummy config used to bounce the server without any docker image
            # or data config change.
            - name: BOUNCE
              value: "dummy"
        - name: mixer
          image:  "{{ .Values.mixer.image.repository }}:{{ .Values.mixer.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.mixer.image.pullPolicy }}
          resources:
            limits:
              memory: "8G"
            requests:
              memory: "8G"
          args:
            - --mixer_project=$(MIXER_PROJECT)
            - --store_project=$(STORE_PROJECT)
            - --bq_dataset=$(BIG_QUERY)
            - --schema_path=/datacommons/mapping
            - --import_group_tables=$(IMPORT_GROUP_TABLES)
            - --memdb_path=/datacommons/memdb
          volumeMounts:
            - name: schema-mapping
              mountPath: /datacommons/mapping
            - name: memdb-config
              mountPath: /datacommons/memdb
          env:
            - name: MIXER_PROJECT
              valueFrom:
                configMapKeyRef:
                  name: {{ include "dc-website.fullname" . }}-mixer-config
                  key: mixerProject
            - name: STORE_PROJECT
              valueFrom:
                configMapKeyRef:
                  name: {{ include "dc-website.fullname" . }}-store-config
                  key: store.project
            - name: BIG_QUERY
              valueFrom:
                configMapKeyRef:
                  name: {{ include "dc-website.fullname" . }}-store-config
                  key: bigquery.version
            - name: IMPORT_GROUP_TABLES
              valueFrom:
                configMapKeyRef:
                  name: {{ include "dc-website.fullname" . }}-store-config
                  key: bigtable_import_groups.version
            - name: MIXER_HASH
              valueFrom:
                configMapKeyRef:
                  name: {{ include "dc-website.fullname" . }}-githash
                  key: mixer_hash.txt
          ports:
            - containerPort: 12345
          startupProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:12345"]
            failureThreshold: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:12345"]
            periodSeconds: 10
          livenessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:12345"]
            periodSeconds: 10
            initialDelaySeconds: 10
        - name: esp
          image:  "{{ .Values.esp.image.repository }}:{{ .Values.esp.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.esp.image.pullPolicy }}
          args:
            - --service=$(SERVICE_NAME)
            - --rollout_strategy=managed
            - --http_port=8081
            - --backend=grpc://127.0.0.1:12345
            - --cors_preset=basic
            - --healthz=healthz
          env:
            - name: SERVICE_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ include "dc-website.fullname" . }}-mixer-config
                  key: serviceName
          resources:
            limits:
              memory: "2G"
            requests:
              memory: "2G"
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8081
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            periodSeconds: 5
            initialDelaySeconds: 5
          ports:
            - containerPort: 8081
