# Default values for dc-website.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Website service config.
website:
  # Domain is a the domain that the installer owns.
  # The installer is responsible for adding an "A" record in
  # the DNS that points to the global static ip referred in this file.
  domain:
  githash:

  # Ingress allows the website service to be exposed to the outside of the cluster.
  # Currently only external global ips are supported.
  ingress:
    enabled: true
    annotations:
      # Name of the existing GCP external global static ip.
      # Please create an external global static ip first if it does not exist.
      # Warning: regional ips will not work.
      kubernetes.io/ingress.global-static-ip-name:

  image:
    repository: gcr.io/datcom-ci/datacommons-website
    pullPolicy: Always
    tag: "latest"

  flask:
    env:
    secretGCPProjectID:

  # IAP(Identity Aware Proxy) config.
  # iap can be enabled independently of ingress.
  iap:
    enabled: false
    clientID:
    secret:

# Mixer service config.
mixer:
  gcpProjectID:
  githash:

  image:
    repository: gcr.io/datcom-ci/datacommons-mixer
    pullPolicy: Always
    tag: "latest"

# Mixer sidecar service config.
esp:
  image:
    repository: gcr.io/endpoints-release/endpoints-runtime
    pullPolicy: Always
    tag: "1"


imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Namespace for the deployment.
# Set enabled to false to deploy into an existing namespace.
namespace:
  enabled: true
  name:

# Each pod contains a set of website, esp, and mixer containers.
# This is the replica count for the number of pods.
replicaCount: 1

# Config for k8s-sa(service account). The k8s-sa will be bound to a
# GCP-sa using annotations, specified below.
serviceAccount:
  create: true
  annotations: {
    iam.gke.io/gcp-service-account:
  }
  name: website-ksa

kgStoreConfig:
  bigqueryVersion:
  bigtableImportGroupsVersion:
  storeProjectID:

service:
  type: NodePort
  port: 80