{{- if .Values.ingress.enabled }}

apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: backendconfig
  namespace: {{ .Values.namespace.name }}
spec:
  timeoutSec: 60
  connectionDraining:
    drainingTimeoutSec: 60
  healthCheck:
    checkIntervalSec: 15
    port: 8080
    type: HTTP
    requestPath: /healthz
  {{- if .Values.website.iap.enabled }}
  iap:
    enabled: true
    oauthclientCredentials:
      secretName: iap-secret
  {{- end }}

---

apiVersion: v1
kind: Service
metadata:
  name: website-service
  namespace: {{ .Values.namespace.name }}
  annotations:
    {{- if .Values.ingress.internal }}
    cloud.google.com/neg: '{"ingress": true}'
    {{- end }}
    cloud.google.com/backend-config: '{"ports": {"8080":"backendconfig"}}'
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app: website-app

{{- if .Values.nodejs.enabled }}
---

apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: backendconfig-nodejs
  namespace: website
spec:
  timeoutSec: 60
  connectionDraining:
    drainingTimeoutSec: 60
  healthCheck:
    checkIntervalSec: 15
    port: 8080
    type: HTTP
    requestPath: /nodejs/healthz

---

apiVersion: v1
kind: Service
metadata:
  name: website-nodejs-service
  namespace: {{ .Values.namespace.name }}
  annotations:
    {{- if .Values.ingress.internal }}
    cloud.google.com/neg: '{"ingress": true}'
    {{- end }}
    cloud.google.com/backend-config: '{"ports": {"8080":"backendconfig-nodejs"}}'
spec:
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app: website-nodejs-app

{{- end }}

---

# Note:
# ingress.gcp.kubernetes.io/pre-shared-cert should match the name
# of the certificate created in Terraform.
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.ingress.name }}
  namespace: {{ .Values.namespace.name }}
  annotations:
    {{- if .Values.ingress.internal }}
    ingress.gcp.kubernetes.io/pre-shared-cert: "website-ilb"
    kubernetes.io/ingress.regional-static-ip-name: "website-ilb-ip"
    kubernetes.io/ingress.class: "gce-internal"
    kubernetes.io/ingress.allow-http: "false"
    {{- else }}
    kubernetes.io/ingress.global-static-ip-name: {{ .Values.ingress.ipName }}
    ingress.gcp.kubernetes.io/pre-shared-cert: {{ .Values.ingress.certName }}
    {{- end }}
spec:
  defaultBackend:
    service:
      name: website-service
      port:
        number: 8080
  rules:
    {{- if .Values.ingress.internal }}
    - host: website-ilb.website.internal
    {{- end }}
    {{- if .Values.nodejs.enabled }}
    - http:
        paths:
        - path: /nodejs/*
          pathType: ImplementationSpecific
          backend:
            service:
              name: website-nodejs-service
              port:
                number: 8080
    {{- end }}


{{- end }}
