apiVersion: v1
kind: Namespace
metadata:
  name: website
---
apiVersion: v1
data:
  mixer_hash.txt: |
    b2ca773
  website_hash.txt: |
    90aaec5
kind: ConfigMap
metadata:
  name: githash-configmap-private-7mthf44cc5
  namespace: website
---
apiVersion: v1
data:
  mixerProject: datcom-karnataka
  serviceName: website-esp.endpoints.datcom-karnataka.cloud.goog
kind: ConfigMap
metadata:
  name: mixer-configmap-private-89bdgd98d6
  namespace: website
---
apiVersion: v1
data:
  base.mcf: |-
    Node: E:StatisticalVariable->E1
    typeOf: StatisticalVariable
    dcid: C:StatisticalVariable->id
    provenance: E:StatisticalVariable->E2
    populationType: C:StatisticalVariable->population_type
    measuredProperty: C:StatisticalVariable->measured_prop
    statType: C:StatisticalVariable->stat_type
    measurementQualifier: C:StatisticalVariable->measurement_qualifier
    measurementDenominator: E:StatisticalVariable->E3
    p1: C:StatisticalVariable->p1
    v1: C:StatisticalVariable->v1
    p2: C:StatisticalVariable->p2
    v2: C:StatisticalVariable->v2
    p3: C:StatisticalVariable->p3
    v3: C:StatisticalVariable->v3
    p4: C:StatisticalVariable->p4
    v4: C:StatisticalVariable->v4
    p5: C:StatisticalVariable->p5
    v5: C:StatisticalVariable->v5
    p6: C:StatisticalVariable->p6
    v6: C:StatisticalVariable->v6
    p7: C:StatisticalVariable->p7
    v7: C:StatisticalVariable->v7
    p8: C:StatisticalVariable->p8
    v8: C:StatisticalVariable->v8
    p9: C:StatisticalVariable->p9
    v9: C:StatisticalVariable->v9
    p10: C:StatisticalVariable->p10
    v10: C:StatisticalVariable->v10
    numConstraints: C:StatisticalVariable->num_constraints
    functionalDeps: dcid

    Node: E:StatisticalVariable->E2
    typeOf: Provenance
    dcid: C:StatisticalVariable->prov_id
    functionalDeps: dcid

    Node: E:StatisticalVariable->E3
    typeOf: StatisticalVariable
    typeOf: Property
    dcid: C:StatisticalVariable->measurement_denominator
    functionalDeps: dcid


    Node: E:StatVarObservation->E1
    typeOf: StatVarObservation
    dcid: C:StatVarObservation->id
    observationAbout: E:StatVarObservation->E2
    variableMeasured: E:StatVarObservation->E3
    value: C:StatVarObservation->value
    observationDate: C:StatVarObservation->observation_date
    observationPeriod: C:StatVarObservation->observation_period
    measurementMethod: C:StatVarObservation->measurement_method
    unit: C:StatVarObservation->unit
    scalingFactor: C:StatVarObservation->scaling_factor
    samplePopulation: C:StatVarObservation->sample_population
    location: E:StatVarObservation->E4
    provenance: E:StatVarObservation->E5
    functionalDeps: dcid

    Node: E:StatVarObservation->E2
    typeOf: Place
    dcid: C:StatVarObservation->observation_about
    functionalDeps: dcid

    Node: E:StatVarObservation->E3
    typeOf: StatisticalVariable
    typeOf: Property
    dcid: C:StatVarObservation->variable_measured
    functionalDeps: dcid

    Node: E:StatVarObservation->E4
    typeOf: GeoCoordinates
    dcid: C:StatVarObservation->location
    functionalDeps: dcid

    Node: E:StatVarObservation->E5
    typeOf: Provenance
    dcid: C:StatVarObservation->prov_id
    functionalDeps: dcid


    Node: E:Place->E1
    typeOf: Place
    subType: C:Place->type
    dcid: C:Place->id
    name: C:Place->name
    alternateName: C:Place->alternate_name
    timezone: C:Place->timezone
    provenance: E:Place->E2
    landArea: E:Place->E3
    waterArea: E:Place->E4
    latitude: C:Place->latitude
    longitude: C:Place->longitude
    elevation: C:Place->elevation
    stateCode: C:Place->state_code
    countryAlpha2Code: C:Place->country_alpha_2_code
    countryAlpha3Code: C:Place->country_alpha_3_code
    countryNumericCode: C:Place->country_numeric_code
    functionalDeps: dcid

    Node: E:Place->E2
    typeOf: Provenance
    dcid: C:Place->prov_id
    functionalDeps: dcid

    Node: E:Place->E3
    typeOf: Quantity
    dcid: C:Place->land_area
    functionalDeps: dcid

    Node: E:Place->E4
    typeOf: Quantity
    dcid: C:Place->water_area
    functionalDeps: dcid


    Node: E:PlaceExt->E1
    typeOf: Place
    subType: C:PlaceExt->type
    dcid: C:PlaceExt->id
    kmlCoordinates: C:PlaceExt->kml_coordinates
    geoJsonCoordinates: C:PlaceExt->geo_json_coordinates
    geoJsonCoordinatesDP1: C:PlaceExt->geo_json_coordinates_dp1
    geoJsonCoordinatesDP2: C:PlaceExt->geo_json_coordinates_dp2
    geoJsonCoordinatesDP3: C:PlaceExt->geo_json_coordinates_dp3
    provenance: E:PlaceExt->E2
    functionalDeps: dcid

    Node: E:PlaceExt->E2
    typeOf: Provenance
    dcid: C:PlaceExt->prov_id
    functionalDeps: dcid


    Node: E:Instance->E1
    typeOf: Thing
    dcid: C:Instance->id
    name: C:Instance->name
    subType: C:Instance->type
    provenance: E:Instance->E2
    functionalDeps: dcid

    Node: E:Instance->E2
    typeOf: Provenance
    dcid: C:Instance->prov_id
    functionalDeps: dcid


    Node: E:Quantity->E1
    typeOf: Quantity
    subType: C:Quantity->type
    dcid: C:Quantity->id
    unitOfMeasure: C:Quantity->unit_of_measure
    value: C:Quantity->value
    startValue: C:Quantity->start_value
    endValue: C:Quantity->end_value
    name: C:Quantity->name
    functionalDeps: dcid


    Node: E:Provenance->E1
    typeOf: Provenance
    dcid: C:Provenance->id
    name: C:Provenance->name
    curator: E:Provenance->E2
    source: E:Provenance->E3
    url: C:Provenance->provenance_url
    description: C:Provenance->provenance_description
    importUrl: C:Provenance->mcf_url
    importTime: C:Provenance->timestamp_secs
    importDuration: C:Provenance->duration_secs
    provenance: E:Provenance->E4
    functionalDeps: dcid

    Node: E:Provenance->E2
    typeOf: Curator
    dcid: C:Provenance->curator
    functionalDeps: dcid

    Node: E:Provenance->E3
    typeOf: Source
    dcid: C:Provenance->source
    functionalDeps: dcid

    Node: E:Provenance->E4
    typeOf: Provenance
    dcid: C:Provenance->prov_id
    functionalDeps: dcid


    Node: E:Curator->E1
    typeOf: Curator
    dcid: C:Curator->id
    provenance: E:Curator->E2
    email: C:Curator->email
    name: C:Curator->name
    functionalDeps: dcid

    Node: E:Curator->E2
    typeOf: Provenance
    dcid: C:Curator->prov_id
    functionalDeps: dcid


    Node: E:Source->E1
    typeOf: Source
    dcid: C:Source->id
    provenance: E:Source->E2
    domain: C:Source->domain
    functionalDeps: dcid

    Node: E:Source->E2
    typeOf: Provenance
    dcid: C:Source->prov_id
    functionalDeps: dcid


    Node: E:Triple->E1
    dcid: C:Triple->subject_id
    provenance: E:Triple->E2
    C:Triple->predicate: C:Triple->object_value
    functionalDeps: dcid

    Node: E:Triple->E2
    typeOf: Provenance
    dcid: C:Triple->prov_id
    functionalDeps: dcid
  dailyweather.mcf: |
    Node: E:DailyWeather->E1
    typeOf: Place
    dcid: C:DailyWeather->place_id
    functionalDeps: dcid

    Node: E:DailyWeather->E2
    typeOf: Provenance
    dcid: C:DailyWeather->prov_id
    functionalDeps: dcid

    Node: E:DailyWeather->E3
    typeOf: DailyWeatherObservation
    observedNode: E:DailyWeather->E1
    provenance: E:DailyWeather->E2
    observationDate: C:DailyWeather->observation_date
    measuredProperty: "temperature"
    observationPeriod: "P1D"
    unit: "Celsius"
    minValue: C:DailyWeather->temp_c_min
    meanValue: C:DailyWeather->temp_c_mean
    maxValue: C:DailyWeather->temp_c_max
    functionalDeps: observedNode, observationDate, observationPeriod

    Node: E:DailyWeather->E4
    typeOf: DailyWeatherObservation
    observedNode: E:DailyWeather->E1
    provenance: E:DailyWeather->E2
    observationDate: C:DailyWeather->observation_date
    measuredProperty: "visibility"
    observationPeriod: "P1D"
    unit: "Kilometer"
    minValue: C:DailyWeather->visibility_km_min
    meanValue: C:DailyWeather->visibility_km_mean
    maxValue: C:DailyWeather->visibility_km_max
    functionalDeps: observedNode, observationDate, observationPeriod

    Node: E:DailyWeather->E5
    typeOf: DailyWeatherObservation
    observedNode: E:DailyWeather->E1
    provenance: E:DailyWeather->E2
    observationDate: C:DailyWeather->observation_date
    measuredProperty: "rainfall"
    observationPeriod: "P1D"
    unit: "Millimeter"
    minValue: C:DailyWeather->rainfall_mm_min
    meanValue: C:DailyWeather->rainfall_mm_mean
    maxValue: C:DailyWeather->rainfall_mm_max
    functionalDeps: observedNode, observationDate, observationPeriod

    Node: E:DailyWeather->E6
    typeOf: DailyWeatherObservation
    observedNode: E:DailyWeather->E1
    provenance: E:DailyWeather->E2
    observationDate: C:DailyWeather->observation_date
    measuredProperty: "snowfall"
    observationPeriod: "P1D"
    unit: "Millimeter"
    minValue: C:DailyWeather->snowfall_mm_min
    meanValue: C:DailyWeather->snowfall_mm_mean
    maxValue: C:DailyWeather->snowfall_mm_max
    functionalDeps: observedNode, observationDate, observationPeriod

    Node: E:DailyWeather->E7
    typeOf: DailyWeatherObservation
    observedNode: E:DailyWeather->E1
    provenance: E:DailyWeather->E2
    observationDate: C:DailyWeather->observation_date
    measuredProperty: "barometricPressure"
    observationPeriod: "P1D"
    unit: "Millibar"
    minValue: C:DailyWeather->barometer_mbar_min
    meanValue: C:DailyWeather->barometer_mbar_mean
    maxValue: C:DailyWeather->barometer_mbar_max
    functionalDeps: observedNode, observationDate, observationPeriod

    Node: E:DailyWeather->E8
    typeOf: DailyWeatherObservation
    observedNode: E:DailyWeather->E1
    provenance: E:DailyWeather->E2
    observationDate: C:DailyWeather->observation_date
    measuredProperty: "humidity"
    observationPeriod: "P1D"
    unit: "Percent"
    minValue: C:DailyWeather->humidity_pct_min
    meanValue: C:DailyWeather->humidity_pct_mean
    maxValue: C:DailyWeather->humidity_pct_max
    functionalDeps: observedNode, observationDate, observationPeriod
  encode.mcf: |-
    Node: E:EncodeBedLine->E1
    typeOf: BedLine
    dcid: C:EncodeBedLine->id
    fromBedFile: E:EncodeBedLine->E2
    chromosome: C:EncodeBedLine->chromosome
    chromosomeStart: C:EncodeBedLine->chromosome_start
    chromosomeEnd: C:EncodeBedLine->chromosome_end
    bedName: C:EncodeBedLine->bed_name
    bedScore: C:EncodeBedLine->bed_score
    chromosomeStrand: C:EncodeBedLine->chromosome_strand
    signalValue: C:EncodeBedLine->signal_value
    pValue: C:EncodeBedLine->p_value
    qValue: C:EncodeBedLine->q_value
    peak: C:EncodeBedLine->peak
    thickStart: C:EncodeBedLine->thick_start
    thickEnd: C:EncodeBedLine->thick_end
    itemRGB: C:EncodeBedLine->item_rgb
    blockCount: C:EncodeBedLine->block_count
    blockSizes: C:EncodeBedLine->block_sizes
    blockStarts: C:EncodeBedLine->block_starts
    provenance: E:EncodeBedLine->E3
    functionalDeps: dcid

    Node: E:EncodeBedLine->E2
    typeOf: EncodeBedFile
    dcid: C:EncodeBedLine->from_bed_file
    functionalDeps: dcid

    Node: E:EncodeBedLine->E3
    typeOf: Provenance
    dcid: C:EncodeBedLine->prov_id
    functionalDeps: dcid
  monthlyweather.mcf: |
    Node: E:MonthlyWeather->E1
    typeOf: Place
    dcid: C:MonthlyWeather->place_id
    functionalDeps: dcid

    Node: E:MonthlyWeather->E2
    typeOf: Provenance
    dcid: C:MonthlyWeather->prov_id
    functionalDeps: dcid

    Node: E:MonthlyWeather->E3
    typeOf: MonthlyWeatherObservation
    observedNode: E:MonthlyWeather->E1
    provenance: E:MonthlyWeather->E2
    observationDate: C:MonthlyWeather->observation_date
    measuredProperty: "temperature"
    observationPeriod: "P1M"
    unit: "Celsius"
    minValue: C:MonthlyWeather->temp_c_min
    meanValue: C:MonthlyWeather->temp_c_mean
    maxValue: C:MonthlyWeather->temp_c_max
    functionalDeps: observedNode, observationDate, observationPeriod

    Node: E:MonthlyWeather->E4
    typeOf: MonthlyWeatherObservation
    observedNode: E:MonthlyWeather->E1
    provenance: E:MonthlyWeather->E2
    observationDate: C:MonthlyWeather->observation_date
    measuredProperty: "visibility"
    observationPeriod: "P1M"
    unit: "Kilometer"
    minValue: C:MonthlyWeather->visibility_km_min
    meanValue: C:MonthlyWeather->visibility_km_mean
    maxValue: C:MonthlyWeather->visibility_km_max
    functionalDeps: observedNode, observationDate, observationPeriod

    Node: E:MonthlyWeather->E5
    typeOf: MonthlyWeatherObservation
    observedNode: E:MonthlyWeather->E1
    provenance: E:MonthlyWeather->E2
    observationDate: C:MonthlyWeather->observation_date
    measuredProperty: "rainfall"
    observationPeriod: "P1M"
    unit: "Millimeter"
    minValue: C:MonthlyWeather->rainfall_mm_min
    meanValue: C:MonthlyWeather->rainfall_mm_mean
    maxValue: C:MonthlyWeather->rainfall_mm_max
    functionalDeps: observedNode, observationDate, observationPeriod

    Node: E:MonthlyWeather->E6
    typeOf: MonthlyWeatherObservation
    observedNode: E:MonthlyWeather->E1
    provenance: E:MonthlyWeather->E2
    observationDate: C:MonthlyWeather->observation_date
    measuredProperty: "snowfall"
    observationPeriod: "P1M"
    unit: "Millimeter"
    minValue: C:MonthlyWeather->snowfall_mm_min
    meanValue: C:MonthlyWeather->snowfall_mm_mean
    maxValue: C:MonthlyWeather->snowfall_mm_max
    functionalDeps: observedNode, observationDate, observationPeriod

    Node: E:MonthlyWeather->E7
    typeOf: MonthlyWeatherObservation
    observedNode: E:MonthlyWeather->E1
    provenance: E:MonthlyWeather->E2
    observationDate: C:MonthlyWeather->observation_date
    measuredProperty: "barometricPressure"
    observationPeriod: "P1M"
    unit: "Millibar"
    minValue: C:MonthlyWeather->barometer_mbar_min
    meanValue: C:MonthlyWeather->barometer_mbar_mean
    maxValue: C:MonthlyWeather->barometer_mbar_max
    functionalDeps: observedNode, observationDate, observationPeriod

    Node: E:MonthlyWeather->E8
    typeOf: MonthlyWeatherObservation
    observedNode: E:MonthlyWeather->E1
    provenance: E:MonthlyWeather->E2
    observationDate: C:MonthlyWeather->observation_date
    measuredProperty: "humidity"
    observationPeriod: "P1M"
    unit: "Percent"
    minValue: C:MonthlyWeather->humidity_pct_min
    meanValue: C:MonthlyWeather->humidity_pct_mean
    maxValue: C:MonthlyWeather->humidity_pct_max
    functionalDeps: observedNode, observationDate, observationPeriod
kind: ConfigMap
metadata:
  name: schema-mapping-private-m28b2tbkhm
  namespace: website
---
apiVersion: v1
data:
  bigquery.version: datcom-store.dc_kg_2022_01_21_01_03_06
  bigtable.version: borgcron_2022_01_21_01_03_06
  store.project: datcom-store
kind: ConfigMap
metadata:
  name: store-configmap-private-45tk59b5tt
  namespace: website
---
apiVersion: v1
data:
  flaskEnv: autopush
  secretProject: datcom-karnataka
kind: ConfigMap
metadata:
  name: website-configmap-private-8mg526f5d2
  namespace: website
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: website-app-private
  namespace: website
spec:
  replicas: 9
  selector:
    matchLabels:
      app: website-app
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: website-app
    spec:
      containers:
      - args: []
        env:
        - name: FLASK_ENV
          valueFrom:
            configMapKeyRef:
              key: flaskEnv
              name: website-configmap-private-8mg526f5d2
        - name: SECRET_PROJECT
          valueFrom:
            configMapKeyRef:
              key: secretProject
              name: website-configmap-private-8mg526f5d2
        - name: MIXER_HASH
          valueFrom:
            configMapKeyRef:
              key: mixer_hash.txt
              name: githash-configmap-private-7mthf44cc5
        - name: WEBSITE_HASH
          valueFrom:
            configMapKeyRef:
              key: website_hash.txt
              name: githash-configmap-private-7mthf44cc5
        - name: BIG_QUERY
          valueFrom:
            configMapKeyRef:
              key: bigquery.version
              name: store-configmap-private-45tk59b5tt
        - name: BIG_TABLE
          valueFrom:
            configMapKeyRef:
              key: bigtable.version
              name: store-configmap-private-45tk59b5tt
        - name: BOUNCE
          value: dummy
        image: gcr.io/datcom-ci/datacommons-website:90aaec5
        imagePullPolicy: Always
        name: website
        ports:
        - containerPort: 8080
        readinessProbe:
          failureThreshold: 1
          httpGet:
            path: /healthz
            port: 8080
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 3G
          requests:
            cpu: 500m
            memory: 3G
      - args:
        - --mixer_project=$(MIXER_PROJECT)
        - --store_project=$(STORE_PROJECT)
        - --bq_dataset=$(BIG_QUERY)
        - --base_table=$(BIG_TABLE)
        - --serve_recon_service=true
        - --schema_path=/datacommons/mapping
        env:
        - name: MIXER_PROJECT
          valueFrom:
            configMapKeyRef:
              key: mixerProject
              name: mixer-configmap-private-89bdgd98d6
        - name: STORE_PROJECT
          valueFrom:
            configMapKeyRef:
              key: store.project
              name: store-configmap-private-45tk59b5tt
        - name: BIG_QUERY
          valueFrom:
            configMapKeyRef:
              key: bigquery.version
              name: store-configmap-private-45tk59b5tt
        - name: BIG_TABLE
          valueFrom:
            configMapKeyRef:
              key: bigtable.version
              name: store-configmap-private-45tk59b5tt
        image: gcr.io/datcom-ci/datacommons-mixer:b2ca773
        imagePullPolicy: Always
        livenessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:12345
          initialDelaySeconds: 10
          periodSeconds: 10
        name: mixer
        ports:
        - containerPort: 12345
        readinessProbe:
          exec:
            command:
            - /bin/grpc_health_probe
            - -addr=:12345
          periodSeconds: 10
        resources:
          limits:
            cpu: 800m
            memory: 6G
          requests:
            cpu: 800m
            memory: 6G
        volumeMounts:
        - mountPath: /datacommons/mapping
          name: schema-mapping
      - args:
        - --service=$(SERVICE_NAME)
        - --rollout_strategy=managed
        - --http_port=8081
        - --backend=grpc://127.0.0.1:12345
        - --cors_preset=basic
        - --healthz=healthz
        env:
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef:
              key: serviceName
              name: mixer-configmap-private-89bdgd98d6
        image: gcr.io/endpoints-release/endpoints-runtime:1
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 5
        name: esp
        ports:
        - containerPort: 8081
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8081
          periodSeconds: 5
        resources:
          limits:
            cpu: 200m
            memory: 1G
          requests:
            cpu: 200m
            memory: 1G
      serviceAccountName: website-ksa
      volumes:
      - configMap:
          name: schema-mapping-private-m28b2tbkhm
        name: schema-mapping
