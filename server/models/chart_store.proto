// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";

package datacommons.proto;

// Observation time series for a given place, measured property, measurement
// method, observation period, stat type, pop type, and an optional list of pop
// PVs. Used for Common Knowledge in Search.
message ObsTimeSeries {
  map<string, double> val = 1;  // Date to value.
  optional string unit = 2;
  optional string place_name = 3;
  optional bool is_dc_aggregate = 4;
}

// A collection of observation values for various places with the same parent
// and place type, for given measured property, measurement method, observation
// period, stat type, observation date, pop type, and an optional list of pop
// PVs.
message ObsCollection {
  message ObsInfo {
    optional string place_name = 1;
    optional double obs_value = 2;
  }
  map<string, ObsInfo> val = 1;  // Place MID to ObsInfo.
  optional string unit = 2;
  optional bool is_dc_aggregate = 3;
}

// Wrapper message for DC Laelaps value.
message ChartStore {
  oneof val {
    ObsTimeSeries obs_time_series = 1;
    ObsCollection obs_collection = 2;
  }
}