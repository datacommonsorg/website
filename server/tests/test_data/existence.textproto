# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

## Test config for tests/lib/subject_page_config_test.py

metadata {
  topic_id: "existence_filtering"
  place_dcid: "place_dcid"
  contained_place_types {
    key: "Planet"
    value: "Country"
  }
}

categories {
  blocks {
    columns {
      tiles {
        type: LINE
        stat_var_key: "sv_exists_1"
      }
      tiles {
        type: LINE
        stat_var_key: "sv_filtered_1"
        stat_var_key: "sv_exists_1"
      }
    }
    columns {
      tiles {
        type: MAP
        stat_var_key: "sv_filtered_2"
      }
    }
  }
  blocks {
    columns {
      tiles {
        type: HIGHLIGHT
        stat_var_key: "sv_filtered_3"
      }
    }
  }
  stat_var_spec {
    key: "sv_exists_1"
    value {
      stat_var: "sv_exists_1"
    }
  }
  stat_var_spec {
    key: "sv_filtered_1"
    value {
      stat_var: "sv_filtered_1"
    }
  }
  stat_var_spec {
    key: "sv_filtered_2"
    value {
      stat_var: "sv_exists_1"
      denom: "sv_filtered_1"
    }
  }
  stat_var_spec {
    key: "sv_filtered_3"
    value {
      stat_var: "sv_filtered_2"
      denom: "sv_exists_3"
    }
  }
}

categories {
  title: "This empty category should be filtered out"
  blocks {
    columns {
      tiles {}
    }
  }
  blocks {
    columns {
    }
  }
}

categories {
  title: "test filtering for bar charts"
  blocks {
    columns {
      tiles {
        type: BAR
        stat_var_key: "sv_child_exists_1"
      }
      tiles {
        type: BAR
        stat_var_key: "sv_parent_exists_1"
        comparison_places: "self"
      }
      tiles {
        type: BAR
        stat_var_key: "sv_child_filtered_1"
      }
      tiles {
        type: BAR
        stat_var_key: "sv_parent_filtered_1"
        comparison_places: "self"
      }
    }
  }
  stat_var_spec {
    key: "sv_child_exists_1"
    value {
      stat_var: "sv_child_exists_1"
    }
  }
  stat_var_spec {
    key: "sv_child_filtered_1"
    value {
      stat_var: "sv_child_filtered_1"
    }
  }
  stat_var_spec {
    key: "sv_parent_exists_1"
    value {
      stat_var: "sv_parent_exists_1"
    }
  }
  stat_var_spec {
    key: "sv_parent_filtered_1"
    value {
      stat_var: "sv_parent_filtered_1"
    }
  }
}

categories {
  title: "test filtering maps without geojson"
  blocks {
    columns {
      tiles {
        type: MAP
        stat_var_key: "sv_child_exists_1"
      }
    }
  }
  stat_var_spec {
    key: "sv_child_exists_1"
    value {
      stat_var: "sv_child_exists_1"
    }
  }
}

categories {
  title: "test filtering for other charts using child places"
  blocks {
    columns {
      tiles {
        type: SCATTER
        stat_var_key: "sv_child_exists_1"
      }
      tiles {
        type: BIVARIATE
        stat_var_key: "sv_child_filtered_1"
      }
    }
  }
  stat_var_spec {
    key: "sv_child_exists_1"
    value {
      stat_var: "sv_child_exists_1"
    }
  }
  stat_var_spec {
    key: "sv_child_filtered_1"
    value {
      stat_var: "sv_child_filtered_1"
    }
  }
}