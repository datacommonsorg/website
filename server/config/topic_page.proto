// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


syntax = "proto3";
package datacommons;

// When a new placeholder is added in any topic page config, add that
// placeholder as a field in the ReplacementStrings interface in 
// static/js/topic_page/string_utils.ts.

message PageMetadata {
  string topic_id = 1;
  string topic_name = 2;
  // List of places supported by this config.
  repeated string place_dcid = 3;
  // Contained places to load for each parent place type.
  // This can be overwritten by tiles.
  map<string, string> contained_place_types = 4;
}


message StatVarMetadata {
  // The main stat var.
  string stat_var = 1;
  // [Optional] Denominator stat var.
  string denom = 2;
  string unit = 3;
  double scaling = 4;
  // [Optional] Whether or not to show this stat var on a log scale
  bool log = 5;
  // The name to use for the stat var in labels and titles.
  string name = 6;
}


message RankingMetadata {
  bool show_highest = 1;
  bool show_lowest = 2;
  bool show_increase = 3;
  bool show_decrease = 4;

  string diff_base_date = 5; // For comparisons

  string highest_title = 6;
  string lowest_title = 7;
  string increase_title = 8;
  string decrease_title = 9;
}

message Tile {
  enum TileType {
    TYPE_NONE = 0;
    LINE = 1;
    BAR = 2;
    MAP = 3;
    SCATTER = 4;
    BIVARIATE = 5;
    RANKING = 6;
    HIGHLIGHT = 7;
    DESCRIPTION = 8;
  }
  // Must be specified for all visual tiles
  string title = 1;
  // Must be set for HIHGLIGHT tiles
  string description = 2;
  TileType type = 3;
  // Key for a StatVarMetadata defined in the containing Category
  repeated string stat_var_key = 4;
  RankingMetadata ranking_metadata = 5;
  // Overrides the contained_place_types for the page.
  map<string, string> contained_place_types = 7;
}

message Block {
  string title = 1;
  string description = 2;
  repeated Tile left_tiles = 3;
  repeated Tile right_tiles = 4;
}

message Category {
  string title = 1;
  string description = 2;
  map<string, StatVarMetadata> stat_var_metadata = 4;
  repeated Block blocks = 3;
}

message TopicPageConfig {
  PageMetadata metadata = 1;
  repeated Category categories = 2;
}