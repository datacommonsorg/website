# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:

# Build the static files
- id: package_js
  name: 'node'
  entrypoint: /bin/bash
  args:
  - -c
  - |
    set -x
    # ./run_test.sh -b can run npm run-script build command which can build all the js files.
    # These js files generated will be necessery for the flask_webdriver_test task.
    ./run_test.sh -b

# Run screenshot tests
- id: flask_webdriver_test
  name: gcr.io/datcom-ci/webdriver-chrome
  entrypoint: /bin/sh
  args:
  - -c
  - |
    ./run_test.sh -s

# Copy over the screenshots to gcs
- name: gcr.io/cloud-builders/gsutil
  entrypoint: /bin/sh
  args:
  - -c
  - |
    gsutil cp server/test_screenshots/*.png gs://datcom-browser-screenshot/$SHORT_SHA/
    rm -rf server/test_screenshots

# Fetch author email from git commit history
- id: fetch author email
  name: 'gcr.io/cloud-builders/git'
  entrypoint: /bin/bash
  args:
  - -c
  - |
    git clone https://github.com/datacommonsorg/website.git
    cd website
    git fetch origin pull/$_PR_NUMBER/head:$BRANCH_NAME --update-head-ok
    COMMIT=$SHORT_SHA
    if [[ "$(git show $SHORT_SHA | head -2 | tail -1)" == Merge:*  ]]
    then
      COMMIT="$(cut -d' ' -f2 <<<`git show $SHORT_SHA | head -2 | tail -1`)"
    fi
    echo `git show $COMMIT | head -n 2 | tail -n 1 | cut -d "<" -f2 | cut -d ">" -f1` > /workspace/email.txt

# Send notify email
- id: send notify email
  name: python:3.7-slim
  entrypoint: /bin/sh
  args:
  - -c
  - |
    cd build-notifier
    pip3 install -r requirements.txt -q
    echo "Receiver email: $(cat /workspace/email.txt)"
    python3 send_email.py \
      --email=$(cat /workspace/email.txt) \
      --short_sha=$SHORT_SHA \
      --pull_request=$_PR_NUMBER
