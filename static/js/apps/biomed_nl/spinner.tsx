/**
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/** @jsxImportSource @emotion/react */

/**
 * A loading spinner that shows a new biomed pun every minute
 */
import { css, ThemeProvider } from "@emotion/react";
import React, { ReactElement, useEffect, useRef, useState } from "react";

import theme from "../../theme/theme";

const THIRTY_SECONDS = 3000;
const SIXTY_SECONDS = 60000;

const CUSTOM_MESSAGES = [
  "The data is taking its time to ensure perfect homeostasis.",
  "Like a healthy cell, the data is going through a natural maturation process.",
  "The data is undergoing a controlled differentiation, becoming more specialized.",
  "The data is percolating through the system, ensuring complete absorption.",
  "The data is taking its time to allow for complete osmosis of information.",
  "The data is making sure all its enzymes are perfectly aligned for the reaction.",
];

export function SpinnerWithText(): ReactElement {
  const [showMessage, setShowMessage] = useState(false);
  const [message, setMessage] = useState("");
  const [messageIndex, setMessageIndex] = useState(0);

  // Show puns in random order every time.
  const shuffledIndexes = useRef(
    [...Array(CUSTOM_MESSAGES.length).keys()].sort(() => Math.random() - 0.5)
  ).current;

  useEffect(() => {
    // Show first biomed pun after 3 seconds
    const timeoutId = setTimeout(() => {
      setShowMessage(true);
      setMessage(CUSTOM_MESSAGES[shuffledIndexes[messageIndex]]);
    }, THIRTY_SECONDS);

    // Show new pun after each minute
    const messageInterval = setInterval(() => {
      setMessageIndex((prevIndex) => (prevIndex + 1) % CUSTOM_MESSAGES.length);
      setMessage(CUSTOM_MESSAGES[shuffledIndexes[messageIndex]]);
    }, SIXTY_SECONDS);

    return () => {
      clearTimeout(timeoutId);
      clearInterval(messageInterval);
    };
  }, [messageIndex, shuffledIndexes]);

  return (
    <ThemeProvider theme={theme}>
      <div className="spinner-container">
        <div
          className="spinner"
          css={css`
            border-left-color: ${theme.colors.box.blue.text};
          `}
        ></div>
        <div>This may take up to 5 minutes...</div>
      </div>
      {showMessage && (
        <div
          css={css`
            margin: ${theme.spacing.xl}px;
          `}
        >
          <p
            css={css`
              ${theme.typography.text.md};
            `}
          >
            {message}*
          </p>
          <p
            css={css`
              ${theme.typography.text.sm};
            `}
          >
            * Puns generated by Gemini
          </p>
        </div>
      )}
    </ThemeProvider>
  );
}
