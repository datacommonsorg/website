# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

project:
  # TODO(shifucun): update dev and staging project when after we create them.
  dev: datcom-mixer-staging # datacommons-website-dev
  staging: dc-test-1-298300
  prod: datacommons-website-prod

image:
  mixer: gcr.io/datcom-ci/datacommons-mixer:latest
  website:
    dev: website:local
    staging: gcr.io/datcom-ci/website:latest
    prod: gcr.io/datcom-ci/website:latest

pull_policy:
  dev: Never
  staging: Always
  prod: Always

args:
  mixer:
    bt_project: google.com:datcom-store-dev
    bt_instance: prophet-cache
    branch_folder:
      dev: "blank_branch_cache" # Emtpy branch cache folder for faster loading
      staging:
      prod:
  esp:
    non_gcp:
      dev: "--non_gcp"
      staging:
      prod:

nodes:
  dev: 1
  staging: 1
  prod: 3

replicas:
  dev: 1
  staging: 3
  prod: 18

# Memory Request and Limit
# https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits
mem:
  website:
    req:
      dev: 1G
      staging: 2G
      prod: 2G
    limit:
      dev: 1G
      staging: 2G
      prod: 2G
  mixer:
    req:
      dev: 2G
      staging: 6G
      prod: 6G
    limit:
      dev: 2G
      staging: 6G
      prod: 6G
  esp:
    req:
      dev: 0.5G
      staging: 1G
      prod: 1G
    limit:
      dev: 0.5G
      staging: 1G
      prod: 1G

# CPU Request and Limit
# https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits
cpu:
  website:
    req:
      dev: 500m
      staging: 1000m
      prod: 1000m
    limit:
      dev: 500m
      staging: 1000m
      prod: 1000m
  mixer:
    req:
      dev: 500m
      staging: 500m
      prod: 1000m
    limit:
      dev: 500m
      staging: 500m
      prod: 1000m
  esp:
    req:
      dev: 100m
      staging: 500m
      prod: 500m
    limit:
      dev: 100m
      staging: 500m
      prod: 500m

bind_project:
  bigquery: google.com:datcom-store-dev
  bigtable: google.com:datcom-store-dev
  branch_cache: google.com:datcom-store-dev
  # TODO(shifucun): use `gsutil acl ...` to give robot account permission.
  # TODO(shifucun): migrate the gcs content to the new project.
  website_gcs: datcom-browser-staging

gcs_bucket:
  website: datcom-browser-staging.appspot.com
